name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.vscode/**'
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: sidechain-launch-kit-runner
    container:
      image: ubuntu:20.04
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Install rippled dependencies
        run: |
          apt -y update
          apt -y install apt-transport-https ca-certificates wget gnupg \
              git-all software-properties-common openssl libssl-dev \
              pkg-config liblzma-dev libbz2-dev zlib1g-dev libjemalloc-dev \
              libicu-dev python3-pip
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
          apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
          apt -y update
          apt -y install cmake gcc-10 g++-10
          update-alternatives --install \
            /usr/bin/gcc gcc /usr/bin/gcc-10 15 \
            --slave /usr/bin/g++ g++ /usr/bin/g++-10 \
            --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-10 \
            --slave /usr/bin/gcc-nm gcc-nm /usr/bin/gcc-nm-10 \
            --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-10 \
            --slave /usr/bin/gcov gcov /usr/bin/gcov-10 \
            --slave /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-dump-10 \
            --slave /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-tool-10
          update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install poetry dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Checkout rippled
        uses: actions/checkout@v3
        with:
          repository: ripple/rippled
          ref: sidechain
          path: ./rippled
        id: checkout-rippled

      - name: Install boost
        uses: MarkusJx/install-boost@v2.1.0
        id: install-boost
        with:
          boost_version: 1.75.0

      - name: Get rippled commit hash
        run: |
          cd rippled
          echo "RIPPLED_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Cache rippled
        id: check-cache
        uses: idein/action-s3-cache@v1.0.0
        with:
          key: rippled-${{ env.RIPPLED_COMMIT }}
          path: ./rippled/my_build
          aws-s3-bucket: github-action-rippled
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install rippled
        if: steps.check-cache.outputs.cache-hit != 'true'
        run: |
          cd rippled
          mkdir my_build
          cd my_build
          cmake ..
          cmake --build .
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

      - name: Run tests
        run: poetry run pytest --cov=slk/ tests/ --basetemp=./sidechain-tests --full-trace
        env:
          RIPPLED_MAINCHAIN_EXE: ./rippled/my_build/rippled
          # version of rippled to run on the sidechain
          RIPPLED_SIDECHAIN_EXE: ./rippled/my_build/rippled
          # directory to store all the sidechain config stuff in
          RIPPLED_SIDECHAIN_CFG_DIR: ./sidechain_config
          # number of federators in the sidechain
          NUM_FEDERATORS: 3
          # mainnet node to connect to (use "standalone" or leave blank for standalone mode)
          MAINNET: standalone #34.83.125.234
          # mainnet port to connect to (should be the WS port). Only used if not in standalone mode.
          MAINNET_PORT: 51233
          # seed for the cross-chain token. Only used not in standalone.
          IOU_ISSUER: sEdTzT8zuY9BcwRwg892dVCz8HdhUG1
          # seed for the door account. Only used not in standalone.
          DOOR_ACCOUNT_SEED: spFuT3mE9zvnH1JF8Msz89MBn3GMj

      - name: Debug Output
        if: always()
        run: tail -1000 ./sidechain-tests/test_simple_xchain0/test_config_files_1/sidechain_testnet/sidechain_0/debug.log
